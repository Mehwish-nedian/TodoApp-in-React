{"version":3,"sources":["store/action/index.js","App.jsx","store/reducer/user_auth.js","store/reducer/app-reducer.js","store/reducer/index.js","store/index.js","index.js"],"names":["setdata","data","dispatch","type","newdata","App","state","console","log","this","props","onClick","React","Component","connect","Name","user","UserName","Email","AppName","app","AppInfo","authState","reducer","appState","action","combineReducers","app_reducer","user_auth","store","createStore","Reducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAaeA,EAPC,SAACC,GACb,OAAO,SAACC,GACJA,EAAS,CAACC,KAAO,UAAWC,QAASH,MCGvCI,E,kDACJ,aAAc,IAAD,8BACX,gBACKC,MAAQ,GAFF,E,qDASJ,IAAD,OAER,OADEC,QAAQC,IAAI,QAASC,KAAKC,OAE1B,6BACE,8CACA,4BAAQC,QAAW,kBAAI,EAAKD,MAAMV,QAAQ,2BAA1C,kB,GAfYY,IAAMC,WAmCTC,eAXS,SAACR,GAAD,MAAW,CACjCS,KAAOT,EAAMU,KAAKC,SAClBC,MAAQZ,EAAMU,KAAKE,MACnBC,QAAUb,EAAMc,IAAID,QACpBE,QAAUf,EAAMc,IAAIC,YAGI,SAACnB,GAAD,MAAc,CACtCF,QAAS,SAACC,GAAD,OAAUC,EAASF,EAAQC,QAGvBa,CAA2CT,G,eC9CpDiB,EAAY,CACdL,SAAW,UACXC,MAAQ,qBAOGK,EAJC,WAAsB,IAArBjB,EAAoB,uDAAZgB,EACrB,OAAOhB,G,OCLLkB,EAAW,CACbL,QAAU,UACVE,QAAU,iBAqBCE,EAlBC,WAA6B,IAA5BjB,EAA2B,uDAAnBkB,EAAUC,EAAS,uCAGxC,OAFAlB,QAAQC,IAAI,aAAciB,GAEnBA,EAAOtB,MACV,IAAK,UACD,OAAO,2BACAG,GADP,IAEIa,QAASM,EAAOrB,UAExB,QACI,OAAOE,ICiBJoB,cAAgB,CAC3BN,IAAKO,EACLX,KAAOY,I,QCnBIC,EAXDC,YAAYC,EAAQ,GAAGC,YAAgBC,MCErDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAASA,GACjB,kBAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.64d8075d.chunk.js","sourcesContent":["\r\n\r\n/*const action = {\r\n    type : \"buyBooks\",\r\n    info : \"Books Sellig\"\r\n}*/\r\nconst setdata = (data) =>{\r\n    return (dispatch) =>{\r\n        dispatch({type : \"SETDATA\", newdata: data })\r\n    }\r\n    \r\n}\r\n\r\nexport default setdata;","import React from 'react';\nimport './App.css';\n\n//import {Button, Modal} from 'react-bootstrap';\n//import { FaEdit } from \"react-icons/fa\";\n//import { MdDelete } from \"react-icons/md\";\n//import {BsThreeDotsVertical} from 'react-icons/bs';\n\nimport {connect} from \"react-redux\";\nimport setdata from \"./store/action\"\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = { \n           \n     \n    \n    }\n  }\n   \n  render(){\n    console.log(\"Props\", this.props);\n  return (\n    <div>\n      <h1>Redux Learning</h1>\n      <button onClick = {()=>this.props.setdata(\"Data sent from button\")}> Set Data</button>\n      \n    </div>      \n      \n  );\n}\n\n}\n\nconst mapStateToProps = (state) =>({\n  Name : state.user.UserName,\n  Email : state.user.Email,\n  AppName : state.app.AppName,\n  AppInfo : state.app.AppInfo\n})\n\nconst mapDispatchToProp = (dispatch) =>({\n  setdata: (data) => dispatch(setdata(data)) \n})\n\nexport default connect(mapStateToProps,mapDispatchToProp)(App);","const authState = {\r\n    UserName : \"Mehwish\",\r\n    Email : \"mehwish@gmail.com\"\r\n}\r\n\r\nconst reducer = (state = authState)=>{\r\n    return state\r\n}\r\n\r\nexport default reducer;","\r\nconst appState = {\r\n    AppName : \"ChatApp\",\r\n    AppInfo : \"Used for Chat\"\r\n}\r\n\r\nconst reducer = (state = appState, action)=>{\r\n    console.log(\"action ==>\", action)\r\n\r\n    switch(action.type){\r\n        case \"SETDATA\":\r\n            return {\r\n                ...state,\r\n                AppName: action.newdata\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n\r\n\r\n  \r\n}\r\n\r\nexport default reducer;","//import buybook from \"../action\";\r\n\r\n/*const initialState = {\r\n    numberOfBooks: 10\r\n}*/\r\n\r\n\r\n//const Reducer = (state = initialState,action)=>{\r\n    /*switch(action.type){\r\n        case \"Buy_Book\":\r\n            return{\r\n                ...state,numberOfBooks: state.numberOfBooks-1\r\n            }\r\n        default:\r\n            return state\r\n    }*/\r\n    /*return state\r\n\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\nimport {combineReducers} from \"redux\";\r\nimport user_auth from \"./user_auth\";\r\nimport app_reducer from \"./app-reducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    app: app_reducer,\r\n    user : user_auth\r\n});\r\n\r\n","\r\nimport Reducer from \"./reducer\"\r\nimport {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(Reducer,{},applyMiddleware(thunk))\r\n\r\n/*console.log(\"Initial state ==>\", store.getState());\r\n\r\nstore.subscribe = () =>{\r\n    console.log(\"Subscribing ==>\", store.getState())\r\n}\r\nstore.dispatch(buybook());\r\n\r\n\r\nconsole.log(\"Updated State ==>\",store.getState());*/\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}